{"version":3,"sources":["components/func/GlobalVariables.js","components/func/JWT_AUTH.js","components/Login.js","components/Header.js","components/func/firebase_setup.js","components/func/queryTags.js","components/NavBar.js","components/func/saveToGoogleSheets.js","components/MultiTag.js","App.js","components/firebasePages/Page.js","components/firebasePages/PublicPage.js","components/firebasePages/UsersByTag.js","components/firebasePages/AllTags.js","index.js"],"names":["GlobalVariables","malFormedURL","includes","jwt","require","credentials","process","cookieName","JWT_AUTH","getSessionData","token","Cookies","get","Error","client","verify","exp","Date","now","this","removeSessionData","e","console","log","message","window","location","href","homepage","loginPage","saveSessionData","clientData","data","email","Math","floor","sign","set","expires","remove","Login","_jsx","className","children","GoogleLogin","clientId","buttonText","onSuccess","googleResponse","profileObj","_googleResponse$profi","profileData","name","imageUrl","JSON","stringify","profilePage","onFailure","cookiePolicy","Header","_jsxs","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getFirestore","getUsersWithTags","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","tagsToFilter","usersCollection","queryForUsers","querySnapshot","usersWithTags","wrap","_context","prev","next","collection","query","where","getDocs","sent","forEach","doc","userData","every","tag","tags","push","abrupt","t0","error","stop","_x","apply","arguments","signout","NavBar","AppBar","position","style","backgroundColor","themeColor","Toolbar","Grid","container","alignItems","justifyContent","item","Button","onClick","HomeIcon","multiTagPage","SearchIcon","color","LogoutIcon","GoogleSpreadsheet","spreadsheetId","getLocalDate","currentDate","setUTCHours","getUTCHours","hours","getHours","toString","padStart","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","slice","concat","_saveToGoogleSheets","row","sheet","useServiceAccountAuth","client_email","private_key","key","loadInfo","sheetsByIndex","addRow","saveToGoogleSheets","MultiTag","props","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","_useState3","_useState4","values","setValues","handleSplitValues","splitValues","resultado","toLowerCase","split","map","value","trim","Busca","length","alert","hideNavBar","Box","sx","display","flexDirection","TextField","type","placeholder","onChange","target","width","marginBottom","variant","marginTop","List","index","ListItem","Link","rel","publicProfilePage","public_id","publicContact","fixURL","portfolio","curriculo","App","minHeight","p","Paper","elevation","maxWidth","mb","border","emailToHash","hash","i","charCodeAt","abs","removedTags","Page","setUserData","setTags","_useState5","_useState6","newTag","setNewTag","_useState7","_useState8","newPublicContact","setNewPublicContact","_useState9","_useState10","newPortfolio","setNewPortfolio","_useState11","_useState12","newCurriculo","setNewCurriculo","fillProfilePage","deleteProfile","id","btoa","deleteDoc","localStorage","removeItem","saveProfile","_ref2","_callee3","userDocRef","updatedTags","batch","storedData","_context3","updateDoc","writeBatch","element","tagDocRef","_defineProperty","merge","_ref3","_callee2","_context2","update","deleteField","commit","parse","getItem","setItem","useEffect","_getData","_callee4","userDoc","_data","publicDocRef","_context4","getDoc","exists","profilePictureUrl","setDoc","t1","getData","handleAddTag","tag_formatted","_toConsumableArray","updatedUserData","_objectSpread","_Fragment","Avatar","alt","src","height","margin","Typography","component","flexWrap","Chip","label","onDelete","tagToRemove","filter","handleRemoveTag","onKeyUp","borderRadius","Divider","padding","mx","CircularProgress","PublicPage","profile_id","useParams","publicUserDocRef","publicUserDoc","_userData","otherProps","_objectWithoutProperties","_excluded","gap","UsersByTag","users","setUsers","fetchData","tagDoc","Object","keys","user","AllTags","tagsCollection","tagData","marginRight","tagPage","router","createHashRouter","path","allTagPage","ReactDOM","document","getElementById","render","RouterProvider"],"mappings":"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","file":"static/js/main.f469192a.chunk.js","sourcesContent":["const GlobalVariables = {}\r\nGlobalVariables.homepage=\"https://rslgp.github.io/collabin/#\";\r\nGlobalVariables.loginPage=\"auth/login\";\r\nGlobalVariables.profilePage=\"page\";\r\nGlobalVariables.publicProfilePage=\"profile/:profile_id\";\r\nGlobalVariables.tagPage=\"tags/:tag\";\r\nGlobalVariables.allTagPage=\"tags\";\r\nGlobalVariables.multiTagPage=\"querytags\";\r\n\r\nGlobalVariables.fixURL = (malFormedURL) => {\r\n    if(!malFormedURL) return;\r\n\r\n    if(malFormedURL.includes(\"http\")){\r\n        return malFormedURL;\r\n    }\r\n    if(malFormedURL.includes(\"9\")){\r\n        return \"https://wa.me/55\"+malFormedURL;\r\n    }\r\n    return \"https://\"+malFormedURL;\r\n}\r\n\r\nGlobalVariables.themeColor = \"#f0f2f5\";\r\n\r\nexport default GlobalVariables;","import Cookies from \"js-cookie\";\r\nimport GlobalVariables from \"./GlobalVariables\";\r\nvar jwt = require(\"jsonwebtoken\");\r\n\r\nvar credentials = {}\r\ncredentials.jwt = process.env.REACT_APP_JWT;\r\n\r\nconst cookieName = \"access_token\";\r\nconst expirationHours=1;\r\n\r\nconst JWT_AUTH = {\r\n  getSessionData: function () {\r\n    try {\r\n        var token = Cookies.get(cookieName);\r\n        if (!token) {\r\n            // Token is not present\r\n            throw new Error('No Auth Cookie');\r\n        }\r\n        var client = jwt.verify(token, credentials.jwt);\r\n\r\n        // Check if token has expired\r\n        if (client.exp && client.exp < Date.now() / 1000) {\r\n            // Token has expired\r\n            this.removeSessionData(); // Remove the expired token            \r\n            throw new Error('Token Expired');\r\n        }\r\n        return client;\r\n    } catch (e) {\r\n        console.log(e.message);\r\n        window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.loginPage;\r\n        return null;\r\n    }\r\n  },\r\n  saveSessionData: function (clientData) {\r\n    const expInSeconds = (expirationHours+1) * 60 * 60;\r\n    const data = {\r\n      email: clientData.email,\r\n      exp: Math.floor(Date.now() / 1000) + expInSeconds,\r\n    };\r\n    var token = jwt.sign(data, credentials.jwt);\r\n    Cookies.set(cookieName, token, { expires: expirationHours / 24 }); // Set the cookie expiration in days\r\n  },\r\n  removeSessionData: function () {\r\n    Cookies.remove(cookieName);\r\n  },\r\n};\r\n\r\nexport default JWT_AUTH;\r\n","import GoogleLogin from  \"@stack-pulse/next-google-login\"\r\n\r\n//import saveToGoogleSheets from './func/saveToGoogleSheets'\r\n\r\nimport JWT_AUTH from \"./func/JWT_AUTH\"\r\nimport GlobalVariables from \"./func/GlobalVariables\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst credentials = {\r\n  \"google\":process.env.REACT_APP_GOOGLE_CLIENTID,\r\n  \"jwt\":process.env.REACT_APP_JWT\r\n}\r\n\r\nfunction Login() {\r\n\r\n    function onLogin(googleResponse){\r\n        console.log(googleResponse);\r\n        //var inseriu = saveToGoogleSheets(googleResponse.profileObj);\r\n        //if(inseriu) alert(\"Ponto registrado\");\r\n        //else alert(\"Falha no ponto\");\r\n\r\n        JWT_AUTH.saveSessionData(googleResponse.profileObj);\r\n        //GlobalVariables.profileData = googleResponse.profileObj;\r\n        const {name, imageUrl} = googleResponse.profileObj;\r\n        const profileData = {name: name, imageUrl:imageUrl};\r\n        Cookies.set(\"profile\",JSON.stringify(profileData));\r\n        \r\n        window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.profilePage;\r\n    }\r\n    \r\n    //const getSession = ()=>{\r\n    //  var client = JWT_AUTH.getSessionData();\r\n    //  if(client) window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.profilePage;\r\n    //}\r\n  return (\r\n    <div className=\"GoogleLogin\">\r\n        <GoogleLogin\r\n        clientId={credentials.google}\r\n        buttonText=\"Continue with Google\"\r\n        onSuccess={onLogin}\r\n        onFailure={console.log}\r\n        cookiePolicy={'single_host_origin'}\r\n        />      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import '../App.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n        <div className='espacamento'/>\r\n        <h1>Collabin</h1>\r\n        <p>Construa experiência e portfolio com projetos em equipe</p>\r\n        <div className='espacamento'/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE,\r\n  authDomain: \"myapp-d87de.firebaseapp.com\",\r\n  projectId: \"myapp-d87de\",\r\n  storageBucket: \"myapp-d87de.appspot.com\",\r\n  messagingSenderId: \"101658274836\",\r\n  appId: \"1:101658274836:web:364eb204ab277197d30b01\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport default app;","import { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport app from \"../func/firebase_setup\"; // Import your Firebase configuration file\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst getUsersWithTags = async (tagsToFilter) => {\r\n  try {\r\n    // Reference to the \"users\" collection\r\n    const usersCollection = collection(firestore, \"users\");\r\n\r\n    // Define the tags you want to filter by\r\n    //const tagsToFilter = [\"react\", \"nodejs\"];\r\n\r\n    // Build a query to find users with both \"react\" and \"nodejs\" tags\r\n    const queryForUsers = query(\r\n      usersCollection,\r\n      where(\"tags\", \"array-contains-any\", tagsToFilter)\r\n    );\r\n\r\n    // Execute the query and get the result\r\n    const querySnapshot = await getDocs(queryForUsers);\r\n\r\n    // Process the query results\r\n    const usersWithTags = [];\r\n    querySnapshot.forEach((doc) => {\r\n      // Get user data\r\n      const userData = doc.data();\r\n\r\n      // Check if the user has both tags\r\n      if (\r\n        tagsToFilter.every((tag) => userData.tags.includes(tag))\r\n      ) {\r\n        usersWithTags.push(userData);\r\n      }\r\n    });\r\n\r\n    // usersWithTags now contains the list of users who have both \"react\" and \"nodejs\" tags\r\n    //console.log(\"Users with both tags:\", usersWithTags);\r\n    return usersWithTags;\r\n  } catch (error) {\r\n    console.error(\"Error fetching users:\", error);\r\n  }\r\n};\r\nexport default getUsersWithTags;","import { AppBar, Button, Grid, Toolbar } from \"@mui/material\";\r\nimport Cookies from \"js-cookie\";\r\nimport GlobalVariables from \"./func/GlobalVariables\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\n\r\nconst signout = () => {\r\n  Cookies.remove(\"access_token\");\r\n  window.location.href =\r\n    GlobalVariables.homepage + \"/\" + GlobalVariables.loginPage;\r\n};\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <AppBar position=\"static\" style={{ backgroundColor: GlobalVariables.themeColor }}>\r\n      <Toolbar>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Button onClick={() => (window.location.href =\r\n              GlobalVariables.homepage + \"/\" + GlobalVariables.profilePage)}>\r\n              <HomeIcon />\r\n            </Button>\r\n            <Button onClick={() => (window.location.href =\r\n              GlobalVariables.homepage + \"/\" + GlobalVariables.multiTagPage)}>\r\n              <SearchIcon />\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button color=\"inherit\" onClick={signout} style={{ color: \"black\" }}>\r\n              <LogoutIcon /> Sign Out\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","var credentials = {}\r\ncredentials.email = process.env.REACT_APP_GOOGLE_EMAIL;\r\ncredentials.key = process.env.REACT_APP_GOOGLE_KEY;\r\ncredentials.spreadsheetId = process.env.REACT_APP_GOOGLE_SHEET;\r\n//console.log(process.env);\r\n//console.log(credentials.key);\r\n//console.log(process.env.REACT_APP_GOOGLE_KEY);\r\n\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\n\r\n// Google Sheets Document ID -- PROD\r\nconst doc = new GoogleSpreadsheet(credentials.spreadsheetId);\r\n\r\nfunction getLocalDate(){\r\n  // Create a new Date object\r\n  const currentDate = new Date();\r\n\r\n  // Adjust the time zone offset to GMT+3 (EEST)\r\n  currentDate.setUTCHours(currentDate.getUTCHours());\r\n\r\n  // Format the date as a string in ISO format\r\n  //const isoDateGMTPlus3 = currentDate.toISOString();\r\n\r\n  const hours = currentDate.getHours().toString().padStart(2, '0');\r\n  const minutes = currentDate.getMinutes().toString().padStart(2, '0');\r\n  const day = currentDate.getDate().toString().padStart(2, '0');\r\n  const month = (currentDate.getMonth() + 1).toString().padStart(2, '0'); // Months are 0-based\r\n  const year = currentDate.getFullYear().toString().slice(-2);\r\n\r\n  const formattedDate = `${hours}:${minutes} ${day}/${month}/${year}`;\r\n  return formattedDate;\r\n\r\n}\r\n\r\nasync function saveToGoogleSheets(row) {\r\n  try{\r\n    await doc.useServiceAccountAuth({\r\n        client_email: credentials.email,\r\n        private_key: credentials.key,\r\n    });\r\n\r\n    await doc.loadInfo(); // Loads document properties and worksheets\r\n\r\n    const sheet = doc.sheetsByIndex[0];\r\n\t\r\n    console.log(row);\r\n    row.Date = getLocalDate();\r\n    var GoogleSpreadsheetRowInserted = await sheet.addRow(row);\r\n    if(GoogleSpreadsheetRowInserted) return true;\r\n  }catch(e){\r\n      console.log(\"erro inserindo sheet\");\r\n      console.log(e.message)\r\n      return false;\r\n  }\r\n}\r\n\r\nexport default saveToGoogleSheets;\r\n","import React, { useState } from \"react\";\r\nimport getUsersWithTags from './func/queryTags';\r\nimport GlobalVariables from \"./func/GlobalVariables\";\r\n\r\nimport {Box, TextField, Button, List, ListItem, Link} from \"@mui/material\";\r\nimport \"../App.css\";\r\nimport NavBar from \"./NavBar\";\r\nimport saveToGoogleSheets from \"./func/saveToGoogleSheets\";\r\n\r\nconst MultiTag = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\"); // State for input value\r\n  const [values, setValues] = useState([]); // State to store split values\r\n\r\n  // Function to handle input value changes\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  // Function to split input value by comma and update the 'values' state\r\n  const handleSplitValues = async () => {\r\n    const splitValues = inputValue.toLowerCase().split(\",\").map((value) => value.trim());\r\n    const resultado = await getUsersWithTags(splitValues);\r\n    setValues(resultado);\r\n\r\n    saveToGoogleSheets({Busca:inputValue});\r\n\r\n    if(resultado.length === 0) alert(\"busca sem resultados\");\r\n  };\r\n\r\nreturn (\r\n  <div>\r\n    {props.hideNavBar ? null : <NavBar/>}\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h2>Buscador de perfil por tags</h2>\r\n      <TextField\r\n        type=\"text\"\r\n        placeholder=\"tags separado por vírgulas (sem espaço)\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        sx={{\r\n          width: \"100%\",\r\n          marginBottom: \"10px\",\r\n        }}\r\n      />\r\n      <Button onClick={handleSplitValues} variant=\"contained\">Buscar</Button>\r\n\r\n      <Box\r\n        sx={{\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        <List>\r\n          {values.map((value, index) => (\r\n            <ListItem key={index}>\r\n              <Link\r\n                className=\"espacamento\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href={`${GlobalVariables.homepage}/${GlobalVariables.publicProfilePage.split(\":\")[0]}${value.public_id}`}\r\n              >\r\n                {value.public_id}\r\n              </Link>\r\n              {value.name}\r\n              \r\n              {value.publicContact ? \r\n              <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.publicContact)}`} target=\"_blank\" rel=\"noreferrer\">\r\n                {value.publicContact}\r\n              </Link> : null}\r\n\r\n              {value.portfolio ? \r\n              <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.portfolio)}`} target=\"_blank\" rel=\"noreferrer\">\r\n                portfolio\r\n              </Link> : null}\r\n\r\n              {value.curriculo ? \r\n              <Link className=\"espacamento\" href={`${GlobalVariables.fixURL(value.curriculo)}`} target=\"_blank\" rel=\"noreferrer\">\r\n                currículo\r\n              </Link> : null}\r\n\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default MultiTag;\r\n","import './App.css';\r\n\r\nimport Login from './components/Login';\r\nimport Header from './components/Header';\r\nimport { Box, Paper } from '@mui/material';\r\nimport MultiTag from './components/MultiTag';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"100vh\"\r\n        p={2}\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Paper elevation={0} sx={{ width: \"100%\", maxWidth:\"400px\", p: 2, mb: 2, border:\"1px solid rgb(219, 219, 219)\" }}>\r\n            <Header />\r\n            <Login />\r\n          </Paper>\r\n          <Paper elevation={0} sx={{ width: \"100%\", p: 3, border:\"1px solid rgb(219, 219, 219)\" }}>\r\n            <MultiTag hideNavBar={true} />\r\n          </Paper>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport JWT_AUTH from \"../func/JWT_AUTH\";\r\nimport app from \"../func/firebase_setup\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\nimport { getFirestore, doc, getDoc, setDoc, updateDoc, deleteField, deleteDoc, writeBatch } from \"firebase/firestore\"; // Updated import statements\r\nimport Cookies from \"js-cookie\";\r\n\r\n\r\nimport { Box, Typography, Avatar, Chip, TextField, Button, Divider,CircularProgress } from \"@mui/material\";\r\nimport NavBar from \"../NavBar\";\r\n\r\n// Initialize Firestore\r\nconst firestore = getFirestore(app);\r\n\r\nfunction emailToHash(email) {\r\n  let hash = 0;\r\n\r\n  for (let i = 0; i < email.length; i++) {\r\n    const char = email.charCodeAt(i);\r\n    hash = (hash << 5) - hash + char;\r\n  }\r\n\r\n  return Math.abs(hash) + Date.now(); // Convert to a positive number\r\n}\r\n\r\nconst removedTags=[];\r\n\r\nconst Page = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [tags, setTags] = useState([]);\r\n  const [newTag, setNewTag] = useState(\"\");\r\n  const [newPublicContact, setNewPublicContact] = useState(\"\");\r\n  const [newPortfolio, setNewPortfolio] = useState(\"\");\r\n  const [newCurriculo, setNewCurriculo] = useState(\"\");\r\n\r\n  const fillProfilePage = (data) => {    \r\n    setUserData(data);\r\n    if(data.tags) setTags(data.tags);\r\n    if(data.publicContact) setNewPublicContact(data.publicContact);\r\n    if(data.portfolio) setNewPortfolio(data.portfolio);\r\n    if(data.curriculo) setNewCurriculo(data.curriculo);\r\n  }\r\n\r\n  const deleteProfile = async () => {    \r\n    const client = JWT_AUTH.getSessionData();\r\n    if (!client) {\r\n      return;\r\n    }\r\n    const email = client.email;\r\n    const id = btoa(email);\r\n    \r\n    await deleteDoc( doc(firestore, \"public_users\", userData.public_id.toString()) );\r\n\r\n    await deleteDoc( doc(firestore, \"users\", id) );\r\n\r\n    localStorage.removeItem(\"userData\");\r\n    \r\n    alert(\"Profile deletado\");\r\n    \r\n    window.location.href=GlobalVariables.homepage +\"/\"+ GlobalVariables.loginPage;\r\n  }\r\n\r\n  const saveProfile = async () => {\r\n    const client = JWT_AUTH.getSessionData();\r\n    if (!client) {\r\n      return;\r\n    }\r\n    const email = client.email;\r\n    const id = btoa(email);\r\n    const userDocRef = doc(firestore, \"users\", id);\r\n\r\n    const updatedTags = tags;\r\n\r\n    // Update the user document with the new tags\r\n    updateDoc(userDocRef, \r\n      { tags: updatedTags, \r\n        publicContact: newPublicContact, \r\n        portfolio: newPortfolio,\r\n        curriculo: newCurriculo\r\n      });\r\n\r\n      // Create a batch\r\n      const batch = writeBatch(firestore);\r\n      updatedTags.forEach((element) => {\r\n        if (element !== \"\") {\r\n          const tagDocRef = doc(firestore, \"tags\", element.toLowerCase());\r\n      \r\n          // Queue an update operation in the batch\r\n          batch.set(\r\n            tagDocRef,\r\n            {\r\n              [userData.public_id.toString()]: true,\r\n            },\r\n            { merge: true } // Merge to update the field without overwriting other data\r\n          );\r\n        }\r\n      });\r\n      \r\n    removedTags.forEach(async (element) => {\r\n      if (element !== \"\") {\r\n        const tagDocRef = doc(firestore, \"tags\", element.toLowerCase());\r\n        \r\n        // Queue a delete operation in the batch\r\n        batch.update(tagDocRef, {\r\n          [userData.public_id.toString()]: deleteField(),\r\n        });\r\n        \r\n      }\r\n    });\r\n    \r\n    // Commit the batch to write all the updates in a single request\r\n    await batch.commit();\r\n    \r\n    \r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    storedData.tags = updatedTags;\r\n    storedData.publicContact= newPublicContact;\r\n    storedData.portfolio= newPortfolio;\r\n    storedData.curriculo= newCurriculo;    \r\n    localStorage.setItem(\"userData\", JSON.stringify(storedData));\r\n\r\n    alert(\"Perfil salvo\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const client = JWT_AUTH.getSessionData();\r\n      if (!client) {\r\n        return;\r\n      }\r\n      const email = client.email;\r\n      const id = btoa(email);\r\n      const userDocRef = doc(firestore, \"users\", id);\r\n\r\n      try {\r\n        // Check if user data is available in local storage\r\n        const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n        if (storedData) {\r\n          // If data is available locally, use it\r\n          fillProfilePage(storedData);\r\n        } else {\r\n          const userDoc = await getDoc(userDocRef);\r\n\r\n          if (userDoc.exists()) {\r\n            const data = userDoc.data();\r\n            fillProfilePage(data);\r\n\r\n            // Store user data in local storage\r\n            localStorage.setItem(\"userData\", JSON.stringify(data));\r\n          } else {\r\n            console.log(\"No data available\");\r\n            try {\r\n              const profileData = JSON.parse(Cookies.get(\"profile\"));\r\n              Cookies.remove(\"profile\"); // Run only once\r\n              const data = {\r\n                email: email,\r\n                name: profileData.name,\r\n                profilePictureUrl: profileData.imageUrl,\r\n                tags: [], // Initialize tags as an empty array\r\n              };\r\n              const public_id = emailToHash(data.email);\r\n              data.public_id = public_id;\r\n              await setDoc(userDocRef, data);\r\n              console.log(public_id.toString());\r\n              const publicDocRef = doc(\r\n                firestore,\r\n                \"public_users\",\r\n                public_id.toString()\r\n              );\r\n\r\n              // Create or update a public user document with an 'id' field\r\n              await setDoc(publicDocRef, { id: id });\r\n              fillProfilePage(data);\r\n\r\n              // Store user data in local storage\r\n              localStorage.setItem(\"userData\", JSON.stringify(data));\r\n            } catch (e) {\r\n              console.log(e.message);\r\n              console.log(\"No data available, creating new - error\");\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, []); // Empty dependency array to run this effect only once\r\n\r\n  const handleAddTag = () => {\r\n    if (newTag.trim() === \"\" || tags.includes(newTag)) return; // Don't add empty tags\r\n\r\n    //if (!/^[A-Za-z ]+$/.test(newTag)) {\r\n    //  // Check if the newTag contains only letters\r\n    //  alert(\"Tags can only contain letters.\");\r\n    //  return;\r\n    //}\r\n    const tag_formatted =  newTag.toLowerCase();\r\n    setNewTag(tag_formatted);\r\n\r\n    // Add the new tag to the tags array\r\n    const updatedTags = [...tags, tag_formatted];\r\n    setTags(updatedTags);\r\n\r\n    // Update the userData in the database\r\n    const updatedUserData = { ...userData, tags: updatedTags};\r\n    setUserData(updatedUserData);\r\n\r\n    // Clear the input field\r\n    setNewTag(\"\");\r\n  };\r\n  \r\n  const checkIfEnterTag = (e) => {\r\n    if(e.key === \"Enter\") handleAddTag();\r\n  }\r\n\r\n  const handleRemoveTag = (tagToRemove) => {\r\n    const updatedTags = tags.filter((tag) => tag !== tagToRemove);\r\n    setTags(updatedTags);\r\n    \r\n    removedTags.push(tagToRemove);\r\n\r\n    // Update the userData in the database\r\n    const updatedUserData = { ...userData, tags: updatedTags };\r\n    setUserData(updatedUserData);\r\n  };\r\n\r\n  const handleTagInputChange = (e) => {\r\n    setNewTag(e.target.value);\r\n  };\r\n  const handlePublicContactInputChange = (e) => {\r\n    setNewPublicContact(e.target.value);\r\n  };\r\n  const handlePortfolioInputChange = (e) => {\r\n    setNewPortfolio(e.target.value);\r\n  };\r\n  const handleCurriculoInputChange = (e) => {\r\n    setNewCurriculo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n      userData ? ( <>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <NavBar/>\r\n        <h2>Profile Information</h2>\r\n        <Avatar\r\n          alt=\"Profile picture\"\r\n          src={userData.profilePictureUrl}\r\n          sx={{\r\n            width: 100,\r\n            height: 100,\r\n            margin: \"auto\",\r\n          }}\r\n        />\r\n        <Typography variant=\"h6\" component=\"h3\">\r\n          {userData.name}\r\n        </Typography>\r\n        <Typography variant=\"body1\">{userData.email}</Typography>\r\n        <Typography variant=\"body1\">\r\n          Public Id:\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={\r\n              GlobalVariables.homepage +\r\n              \"/\" +\r\n              GlobalVariables.publicProfilePage.split(\":\")[0] +\r\n              userData.public_id\r\n            }\r\n          >\r\n            {userData.public_id}\r\n          </a>\r\n        </Typography>\r\n\r\n        <Typography variant=\"body1\">Tags:</Typography>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\", // Change the direction to horizontal\r\n            flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {tags.map((tag, index) => (\r\n            <Chip\r\n              key={index}\r\n              label={tag}\r\n              onDelete={() => handleRemoveTag(tag)}\r\n              sx={{\r\n                margin: \"5px\",\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n\r\n        <div style={{ display: \"flex\", flexDirection: \"row\", width: \"80%\" }}>\r\n        <TextField\r\n          label=\"Add a tag\"\r\n          value={newTag}\r\n          onChange={handleTagInputChange}\r\n          onKeyUp={checkIfEnterTag}\r\n          sx={{\r\n            width: \"100%\",\r\n            margin: \"10px -8px 0 0\",\r\n          }}\r\n        />\r\n        <Button onClick={handleAddTag} style={{borderRadius:\"12px\",height: \"60px\", margin: \"8px 0 0 8px\", backgroundColor:\"#f0f2f5\"}} >ADD</Button>\r\n      </div>\r\n        \r\n        <TextField\r\n          label=\"Add Public Contact\"\r\n          placeholder=\"Enter contact email, number, social media\"\r\n          value={newPublicContact}\r\n          onChange={handlePublicContactInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        \r\n        <TextField\r\n          label=\"Add portfolio URL\"\r\n          placeholder=\"Enter portfolio URL\"\r\n          value={newPortfolio}\r\n          onChange={handlePortfolioInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        \r\n        <TextField\r\n          label=\"Add curriculo URL\"\r\n          placeholder=\"Enter curriculo URL\"\r\n          value={newCurriculo}\r\n          onChange={handleCurriculoInputChange}\r\n          sx={{\r\n            width: \"80%\",\r\n            margin: \"10px 0\",\r\n          }}\r\n        />\r\n\r\n        <Button onClick={saveProfile} style={{borderRadius:\"12px\",height: \"60px\", width: \"80%\", marginTop: \"8px\", backgroundColor:\"#f0f2f5\"}} >SAVE</Button>\r\n\r\n        \r\n        <Divider variant=\"fullWidth\" sx={{ margin: \"16px 0\", padding:\"10px\", width:\"70%\", mx: \"auto\" }} />\r\n        \r\n        <Button onClick={deleteProfile} style={{color:\"red\", borderRadius:\"12px\",height: \"60px\", width: \"80%\", marginTop: \"8px\", backgroundColor:\"#f0f2f5\"}} >Delete Profile</Button>\r\n\r\n      </Box>\r\n          </>\r\n      ) : (\r\n        <>\r\n          <CircularProgress/>\r\n          <p>Loading profile data...</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport app from \"../func/firebase_setup\";\r\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nimport { Box, Typography, Avatar, Chip, Link } from \"@mui/material\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst PublicPage = () => {\r\n  const { profile_id } = useParams();\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const publicUserDocRef = doc(firestore, \"public_users\", profile_id);\r\n\r\n      try {\r\n        const publicUserDoc = await getDoc(publicUserDocRef);\r\n\r\n        if (publicUserDoc.exists()) {\r\n          const data = publicUserDoc.data();\r\n          const userDocRef = doc(firestore, \"users\", data.id);\r\n          const userDoc = await getDoc(userDocRef);\r\n\r\n          if (userDoc.exists()) {\r\n            const userData = userDoc.data();\r\n            const { email, ...otherProps } = userData;\r\n            setUserData(otherProps);\r\n          } else {\r\n            console.log(\"No data available for user\");\r\n          }\r\n        } else {\r\n          console.log(\"No data available for public user\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    }\r\n\r\n    getData();\r\n  }, [profile_id]); // Empty dependency array to run this effect only once\r\n\r\n  return (\r\n    <div>\r\n  {userData ? (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h2>Profile Information</h2>\r\n      <Typography variant=\"h6\" component=\"h3\">\r\n        {userData.name}\r\n      </Typography>\r\n\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          gap: \"10px\", // Add gap between the links\r\n          marginTop: \"10px\", // Add margin to the top\r\n        }}\r\n      >\r\n        {userData.publicContact ? (\r\n          <Link href={`${GlobalVariables.fixURL(userData.publicContact)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            {userData.publicContact}\r\n          </Link>\r\n        ) : null}\r\n\r\n        {userData.portfolio ? (\r\n          <Link href={`${GlobalVariables.fixURL(userData.portfolio)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            Portfolio\r\n          </Link>\r\n        ) : null}\r\n\r\n        {userData.curriculo ? (\r\n          <Link href={`${GlobalVariables.fixURL(userData.curriculo)}`} target=\"_blank\" rel=\"noreferrer\">\r\n            Curriculo\r\n          </Link>\r\n        ) : null}\r\n      </Box>\r\n\r\n\r\n      <Avatar\r\n        alt=\"Profile picture\"\r\n        src={userData.profilePictureUrl}\r\n        sx={{\r\n          width: 100,\r\n          height: 100,\r\n          margin: \"auto\",\r\n        }}\r\n      />\r\n      <Typography variant=\"body1\">Tags:</Typography>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\", // Change the direction to horizontal\r\n          flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        {userData.tags.map((tag, index) => (\r\n          <Chip\r\n            key={index}\r\n            label={tag}\r\n            sx={{\r\n              margin: \"5px\",\r\n            }}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  ) : (\r\n    <p>Loading profile data...</p>\r\n  )}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default PublicPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFirestore, doc, getDoc } from \"firebase/firestore\";\r\nimport app from \"../func/firebase_setup\"; // Make sure to import the Firebase app instance\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst UsersByTag = () => {\r\n  const { tag } = useParams(); // Get the tag from the URL params\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        \r\n        const tagDocRef = doc(firestore, \"tags\", tag);\r\n        const tagDoc = await getDoc(tagDocRef);\r\n        console.log(tagDoc.data());\r\n        setUsers(Object.keys(tagDoc.data()));\r\n        } catch (error) {\r\n        console.error(\"Error fetching tag data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tag]); // Fetch data whenever the tag URL parameter changes\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users with Tag: {tag}</h2>\r\n      <div>\r\n        {users.map((user) => (\r\n          <div key={user}>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            href={`${GlobalVariables.homepage}/${GlobalVariables.publicProfilePage.split(\":\")[0]}${user}`}\r\n          >\r\n            {user}\r\n          </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UsersByTag;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport GlobalVariables from \"../func/GlobalVariables\";\r\nimport app from \"../func/firebase_setup\"; // Import your Firebase configuration file\r\n\r\nimport { Box, Link } from \"@mui/material\";\r\n\r\nconst firestore = getFirestore(app);\r\n\r\nconst AllTags = () => {\r\n  const { tag } = useParams();\r\n  const [tags, setTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Reference to the \"tags\" collection\r\n        const tagsCollection = collection(firestore, \"tags\");\r\n\r\n        // Fetch all documents within the \"tags\" collection\r\n        const querySnapshot = await getDocs(tagsCollection);\r\n\r\n        const tagData = [];\r\n        querySnapshot.forEach((doc) => {\r\n          // Get the document data and add it to the array\r\n          tagData.push(doc.id);\r\n        });\r\n\r\n        setTags(tagData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tag data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [tag]);\r\n\r\n  return (\r\n    <div>\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <h2>All Tags:</h2>\r\n      <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\", // Change the direction to horizontal\r\n            flexWrap: \"wrap\", // Allow items to wrap to the next line\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n        {tags.map((tag) => (\r\n          <Link style={{ marginRight: \"10px\" }} key={tag} href={`${GlobalVariables.homepage}/${GlobalVariables.tagPage.split(\":\")[0]}${tag}`} rel=\"noreferrer\" target=\"_blank\">\r\n            {tag}\r\n          </Link>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default AllTags;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom/client\";\r\nimport {\r\n  createHashRouter,\r\n  RouterProvider,\r\n} from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport GlobalVariables from \"./components/func/GlobalVariables\";\r\nimport Page from \"./components/firebasePages/Page\";\r\nimport PublicPage from \"./components/firebasePages/PublicPage\";\r\nimport UsersByTag from \"./components/firebasePages/UsersByTag\";\r\nimport AllTags from \"./components/firebasePages/AllTags\";\r\nimport MultiTag from \"./components/MultiTag\";\r\n\r\n// Set the initial hash value to '/#' when the application loads.\r\nif (window.location.hash === \"\") {\r\n  window.location.hash = \"/\";\r\n}\r\n\r\nconst router = createHashRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <App />,\r\n  },\r\n  {\r\n    path: GlobalVariables.loginPage,\r\n    element: <App />\r\n  },\r\n  {\r\n    path: GlobalVariables.profilePage,\r\n    element: <Page />,\r\n  },\r\n  {\r\n    path: GlobalVariables.publicProfilePage,\r\n    element: <PublicPage />,\r\n  },\r\n  {\r\n    path: GlobalVariables.tagPage,\r\n    element: <UsersByTag />,\r\n  },\r\n  {\r\n    path: GlobalVariables.allTagPage,\r\n    element: <AllTags />,\r\n  },\r\n  {\r\n    path: GlobalVariables.multiTagPage,\r\n    element: <MultiTag />,\r\n  }\r\n]);\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  //<React.StrictMode> //fix useEffect running twice\r\n    <RouterProvider router={router} />\r\n  //</React.StrictMode>\r\n);\r\n"],"sourceRoot":""}